{
  "preamble": {
    "title": "paima/aiken-mdx-test",
    "description": "Aiken test contract for aiken-mdx",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.29-alpha+16fb02e"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "whirl.minter",
      "redeemer": {
        "title": "_rdmr",
        "schema": {
          "$ref": "#/definitions/aiken_mdx_test~1validation~1MintActions"
        }
      },
      "parameters": [
        {
          "title": "_init_ref",
          "schema": {
            "$ref": "#/definitions/aiken~1transaction~1OutputReference"
          }
        }
      ],
      "compiledCode": "59039f01000032323232323222253232333006300230073754006264a66600ec29309b2b1919299980418020008a99980598051baa00614985854ccc020c00c0044c8c8c8c8c8c94ccc044c04c0084c8c926533300f300b30103754008264646464646464646464646464646464a66604460480042930b1bad30220013022002375a604000260400046eb8c078004c078008dd7180e000980e0011bae301a001301a002375c603000260300046eb8c058004c058008dd7180a00098089baa0041632533300f300b0011323253330143016002149858dd7180a00098089baa0061533300f300a0011323253330143016002149858dd7180a00098089baa00616300f375400a2c6eb4c044004c044008c03c004c03c008c034004c028dd50030a99980419b874801000454ccc02cc028dd50030a4c2c2a66601066e1d200600113232533300d300f002132498c8c8c94ccc040c04800852616375c602000260200046eb4c03800458dd6180680098051baa006153330083370e900400089919299980698078010a4c2c601a00260146ea801854ccc020cdc3a401400226464a66601a601e0042930b192999805180318058008a99980698060008a4c2c2c6ea8c034004c028dd50030a99980419b87480300044c8c94ccc034c03c0084c92632375c601a0046eb4c02c00458c94ccc034c03cc03c0044cdd81807000980718078008b1bac300d001300a375400c2a66601066e1d200e00113232533300d300f002132498cc0100048c8dd718070011bad300c001163756601a00260146ea801854ccc020cdc3a402000226464a66601a601e004264931980200091bad001163758601a00260146ea801858c020dd50029119198008008019129998068008a4c2646600600660200046006601c002264644a666012c29309b2b1919299980498028008a99980618059baa00214985854ccc024c0100044c8c94ccc038c04000852616375a601c00260166ea800854ccc024cdc3a40080022a66601860166ea8008526161630093754002601660126ea8010c94ccc01cc00c0044c8c8c8c94ccc038c04000852616375c601c002601c0046eb8c030004c024dd50028a99980398010008991919192999807180800109924c64a666018601000226464a66602260260042930b1bae3011001300e37540082a666018600e00226464a66602260260042930b1bae3011001300e37540082c60186ea800c58dd698070009807001180600098049baa00516300737540086e1d2002370e90002b9a5573aaae7955cfaba157441",
      "hash": "dfc9dcffa783d945b8b45e1836dda266cae0694f036e43c39b30df6a"
    },
    {
      "title": "whirl.validate",
      "datum": {
        "title": "_datum",
        "schema": {
          "$ref": "#/definitions/aiken_mdx_test~1validation~1State"
        }
      },
      "redeemer": {
        "title": "_rdmr",
        "schema": {
          "$ref": "#/definitions/RedeemerWrapper$aiken_mdx_test~1validation~1ValidateActions"
        }
      },
      "parameters": [
        {
          "title": "_init_ref",
          "schema": {
            "$ref": "#/definitions/aiken~1transaction~1OutputReference"
          }
        }
      ],
      "compiledCode": "59039f01000032323232323222253232333006300230073754006264a66600ec29309b2b1919299980418020008a99980598051baa00614985854ccc020c00c0044c8c8c8c8c8c94ccc044c04c0084c8c926533300f300b30103754008264646464646464646464646464646464a66604460480042930b1bad30220013022002375a604000260400046eb8c078004c078008dd7180e000980e0011bae301a001301a002375c603000260300046eb8c058004c058008dd7180a00098089baa0041632533300f300b0011323253330143016002149858dd7180a00098089baa0061533300f300a0011323253330143016002149858dd7180a00098089baa00616300f375400a2c6eb4c044004c044008c03c004c03c008c034004c028dd50030a99980419b874801000454ccc02cc028dd50030a4c2c2a66601066e1d200600113232533300d300f002132498c8c8c94ccc040c04800852616375c602000260200046eb4c03800458dd6180680098051baa006153330083370e900400089919299980698078010a4c2c601a00260146ea801854ccc020cdc3a401400226464a66601a601e0042930b192999805180318058008a99980698060008a4c2c2c6ea8c034004c028dd50030a99980419b87480300044c8c94ccc034c03c0084c92632375c601a0046eb4c02c00458c94ccc034c03cc03c0044cdd81807000980718078008b1bac300d001300a375400c2a66601066e1d200e00113232533300d300f002132498cc0100048c8dd718070011bad300c001163756601a00260146ea801854ccc020cdc3a402000226464a66601a601e004264931980200091bad001163758601a00260146ea801858c020dd50029119198008008019129998068008a4c2646600600660200046006601c002264644a666012c29309b2b1919299980498028008a99980618059baa00214985854ccc024c0100044c8c94ccc038c04000852616375a601c00260166ea800854ccc024cdc3a40080022a66601860166ea8008526161630093754002601660126ea8010c94ccc01cc00c0044c8c8c8c94ccc038c04000852616375c601c002601c0046eb8c030004c024dd50028a99980398010008991919192999807180800109924c64a666018601000226464a66602260260042930b1bae3011001300e37540082a666018600e00226464a66602260260042930b1bae3011001300e37540082c60186ea800c58dd698070009807001180600098049baa00516300737540086e1d2002370e90002b9a5573aaae7955cfaba157441",
      "hash": "dfc9dcffa783d945b8b45e1836dda266cae0694f036e43c39b30df6a"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Data": {
      "title": "Data",
      "description": "Any Plutus data."
    },
    "Int": {
      "dataType": "integer"
    },
    "List$Int": {
      "dataType": "list",
      "items": {
        "$ref": "#/definitions/Int"
      }
    },
    "List$Pair$Int_ByteArray": {
      "dataType": "map",
      "keys": {
        "$ref": "#/definitions/Int"
      },
      "values": {
        "$ref": "#/definitions/ByteArray"
      }
    },
    "RedeemerWrapper$aiken_mdx_test/validation/ValidateActions": {
      "title": "Wrapped Redeemer",
      "description": "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      "anyOf": [
        {
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/aiken_mdx_test~1validation~1ValidateActions"
            }
          ]
        }
      ]
    },
    "Tuple$Int_ByteArray": {
      "title": "Tuple",
      "dataType": "list",
      "items": [
        {
          "$ref": "#/definitions/Int"
        },
        {
          "$ref": "#/definitions/ByteArray"
        }
      ]
    },
    "Void": {
      "title": "Unit",
      "description": "The nullary constructor.",
      "anyOf": [
        {
          "dataType": "constructor",
          "index": 0,
          "fields": []
        }
      ]
    },
    "aiken/sparse_merkle_tree/merkle_blake256/MerkleProofBlock$aiken/transaction/credential/Credential": {
      "title": "MerkleProofBlock",
      "anyOf": [
        {
          "title": "MerkleProofBlock",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "left_leaf",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "right_leaf",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "left_proofs",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "right_proofs",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "continuing_side_proofs",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "remaining_proofs",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "left_right_intersection",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "intersecting_level",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "aiken/transaction/OutputReference": {
      "title": "OutputReference",
      "description": "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
      "anyOf": [
        {
          "title": "OutputReference",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "transaction_id",
              "$ref": "#/definitions/aiken~1transaction~1TransactionId"
            },
            {
              "title": "output_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "aiken/transaction/TransactionId": {
      "title": "TransactionId",
      "description": "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
      "anyOf": [
        {
          "title": "TransactionId",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "hash",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken/transaction/credential/Credential": {
      "title": "Credential",
      "description": "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      "anyOf": [
        {
          "title": "VerificationKeyCredential",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "ScriptCredential",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "aiken_mdx_test/validation/MintActions": {
      "title": "MintActions",
      "anyOf": [
        {
          "title": "InitMerkle",
          "dataType": "constructor",
          "index": 0,
          "fields": []
        },
        {
          "title": "CreateAccount",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "account",
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "merkle_proof_block",
              "$ref": "#/definitions/aiken~1sparse_merkle_tree~1merkle_blake256~1MerkleProofBlock$aiken~1transaction~1credential~1Credential"
            },
            {
              "title": "output_index",
              "$ref": "#/definitions/Int"
            }
          ]
        },
        {
          "title": "BurnAccount",
          "dataType": "constructor",
          "index": 2,
          "fields": []
        },
        {
          "title": "TupleTest",
          "description": "Test comment",
          "dataType": "constructor",
          "index": 3,
          "fields": [
            {
              "title": "val",
              "$ref": "#/definitions/Tuple$Int_ByteArray"
            }
          ]
        },
        {
          "title": "DataTest",
          "dataType": "constructor",
          "index": 4,
          "fields": [
            {
              "title": "val",
              "$ref": "#/definitions/Data"
            }
          ]
        },
        {
          "title": "VoidTest",
          "dataType": "constructor",
          "index": 5,
          "fields": [
            {
              "title": "val",
              "$ref": "#/definitions/Void"
            }
          ]
        },
        {
          "title": "PairTest",
          "dataType": "constructor",
          "index": 6,
          "fields": [
            {
              "title": "val",
              "$ref": "#/definitions/Pair$Int_ByteArray"
            }
          ]
        },
        {
          "title": "PairsTest",
          "dataType": "constructor",
          "index": 7,
          "fields": [
            {
              "title": "val",
              "$ref": "#/definitions/List$Pair$Int_ByteArray"
            }
          ]
        },
        {
          "title": "ListTest",
          "dataType": "constructor",
          "index": 8,
          "fields": [
            {
              "title": "val",
              "$ref": "#/definitions/List$Int"
            }
          ]
        }
      ]
    },
    "aiken_mdx_test/validation/State": {
      "title": "State",
      "anyOf": [
        {
          "title": "Merkle",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "root",
              "$ref": "#/definitions/ByteArray"
            },
            {
              "title": "own_hash",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "Account",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/aiken~1transaction~1credential~1Credential"
            },
            {
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "aiken_mdx_test/validation/ValidateActions": {
      "title": "ValidateActions",
      "anyOf": [
        {
          "title": "SpendMerkleRoot",
          "dataType": "constructor",
          "index": 0,
          "fields": []
        },
        {
          "title": "IncrementAccount",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "$ref": "#/definitions/Int"
            }
          ]
        },
        {
          "title": "DestroyAccount",
          "dataType": "constructor",
          "index": 2,
          "fields": []
        }
      ]
    }
  }
}