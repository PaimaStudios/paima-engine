
<AikenProject
  anchor="{{anchor}}"
  namespace="{{blueprint.preamble.title}}"
  description="{{{blueprint.preamble.description}}}"
  plutusVersion="{{blueprint.preamble.plutusVersion}}"
  githubLink="{{context.githubLink}}"
>
  {{!-- githubLink="https://github.com/PaimaStudios/paima-engine/tree/master/packages/contracts/cardano-contracts/{{context.path}}" --}}
  <>
    {{{header title 1 }}}
  </>
  {{#*inline "renderType"}}
    {{#if (isType "EnumType" this)}}
      <AikenEnum title="{{title}}" description="{{{description}}}">
        {{#each children}}
          {{> renderType}}
        {{/each}}
      </AikenEnum>
    {{/if}}
    {{#if (isType "ConstructorSimple" this)}}
      <AikenConstructorSimple title="{{title}}" description="{{{description}}}" />
    {{/if}}
    {{#if (isType "ConstructorMap" this)}}
      <AikenConstructorMap title="{{title}}" description="{{{description}}}">
        {{#each children}}
          <AikenConstructorMapField mapKey="{{key}}">
            {{#with type}}
              {{> renderType}}
            {{/with}}
          </AikenConstructorMapField>
        {{/each}}
      </AikenConstructorMap>
    {{/if}}
    {{#if (isType "ConstructorTuple" this)}}
      <AikenConstructorTuple title="{{title}}" description="{{{description}}}">
        {{#each children}}
          {{> renderType}}
        {{/each}}
      </AikenConstructorTuple>
    {{/if}}
    {{#if (isType "ListType" this)}}
      <AikenListType>
        {{#with children}}
          {{> renderType}}
        {{/with}}
      </AikenListType>
    {{/if}}
    {{#if (isType "TupleType" this)}}
      <AikenTupleType>
        {{#each children}}
          {{> renderType}}
        {{/each}}
      </AikenTupleType>
    {{/if}}
    {{#if (isType "MapType" this)}}
      <AikenMapType mapKey={ {{#with keys}}{{> renderType}}{{/with}} }>
        {{#with values}}
          {{> renderType}}
        {{/with}}
      </AikenMapType>
    {{/if}}
    {{#if (isType "BaseType" this)}}
      <AikenBaseType value="{{value}}" />
    {{/if}}
  {{/inline}}
  
  <AikenValidators>
    <>
      {{{header "Validators" 2 }}}
    </>
    {{#each blueprint.validators}}
    <AikenValidator
      title="{{title}}"
      description="{{description}}"
      {{#if datum}}
      datum={
        <AikenDatum
          title="{{datum.title}}"
          description="{{{datum.description}}}"
          {{!-- TODO: support "purpose" --}}
        >
          {{#typeFromRef datum.schema.$ref}}
            {{> renderType}}
          {{/typeFromRef}}
        </AikenDatum>
      }
      {{/if}}
      redeemer={
        <AikenRedeemer
          title="{{redeemer.title}}"
          description="{{{redeemer.description}}}"
          {{!-- TODO: support "purpose" --}}
        >
          {{#typeFromRef redeemer.schema.$ref}}
            {{> renderType}}
          {{/typeFromRef}}
        </AikenRedeemer>
      }
      parameters={[
        {{#each parameters}}
          <AikenParameter
            title="{{title}}"
            description="{{{description}}}"
            {{!-- TODO: support "purpose" --}}
          >
            {{#typeFromRef schema.$ref}}
              {{> renderType}}
            {{/typeFromRef}}
          </AikenParameter>,
        {{/each}}
      ]}
    />
    {{/each}}
  </AikenValidators>

  {{!-- reference: https://docs.rs/nom/latest/nom/enum.Needed.html --}}
  {{#if has-constructors}}
  <AikenDefinitions>
    <>
      {{{header "Definitions" 2 }}}
    </>
    {{#each all-constructors}}
    <AikenDefinitionBlock
      scope="{{scope}}"
      isLocal={ {{isLocal}} }
    >
      {{#each names}}
        {{#typeToSignature original}}
          {{#if ../../isLocal}}
            {{> renderType}}
          {{else}}
            <AikenBaseType value="{{title}}" />
          {{/if}}
        {{/typeToSignature}}
      {{/each}}
    </AikenDefinitionBlock>
    {{/each}}
  </AikenDefinitions>
  {{/if}}
</AikenProject>