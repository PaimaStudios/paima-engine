{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"DryRunResponse": {
				"properties": {
					"valid": {
						"type": "boolean"
					}
				},
				"required": [
					"valid"
				],
				"type": "object"
			},
			"VersionString": {
				"type": "string",
				"description": "tsoa doesn't support string interpolation in type names like `${number}`\nBut the real type of this is `${number}.${number}.${number}`\nhttps://github.com/lukeautry/tsoa/pull/1469"
			},
			"LatestProcessedBlockheightResponse": {
				"properties": {
					"block_height": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"block_height"
				],
				"type": "object"
			},
			"EmulatedBlockActiveResponse": {
				"properties": {
					"emulatedBlocksActive": {
						"type": "boolean"
					}
				},
				"required": [
					"emulatedBlocksActive"
				],
				"type": "object"
			},
			"SuccessfulResult_number_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"result": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FailedResult": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							false
						],
						"nullable": false
					},
					"errorMessage": {
						"type": "string"
					},
					"errorCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"errorMessage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_number_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/SuccessfulResult_number_"
					},
					{
						"$ref": "#/components/schemas/FailedResult"
					}
				]
			},
			"DeploymentBlockheightToEmulatedResponse": {
				"$ref": "#/components/schemas/Result_number_"
			},
			"SuccessfulResult_boolean_": {
				"properties": {
					"success": {
						"type": "boolean",
						"enum": [
							true
						],
						"nullable": false
					},
					"result": {
						"type": "boolean"
					}
				},
				"required": [
					"success",
					"result"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Result_boolean_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/SuccessfulResult_boolean_"
					},
					{
						"$ref": "#/components/schemas/FailedResult"
					}
				]
			},
			"ConfirmInputAcceptanceResponse": {
				"$ref": "#/components/schemas/Result_boolean_"
			},
			"Achievement": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Unique Achievement String"
					},
					"score": {
						"type": "number",
						"format": "double",
						"description": "Optional: Relative Value of the Achievement"
					},
					"category": {
						"type": "string",
						"description": "Optional: 'Gold' | 'Diamond' | 'Beginner' | 'Advanced' | 'Vendor'"
					},
					"percentCompleted": {
						"type": "number",
						"format": "double",
						"description": "Percent of players that have unlocked the achievement"
					},
					"isActive": {
						"type": "boolean",
						"description": "If achievement can be unlocked at the time."
					},
					"displayName": {
						"type": "string",
						"description": "Achievement Display Name"
					},
					"description": {
						"type": "string",
						"description": "Achievement Description"
					},
					"spoiler": {
						"type": "string",
						"enum": [
							"all",
							"description"
						],
						"description": "Hide entire achievement or description if not completed"
					},
					"iconURI": {
						"type": "string",
						"description": "Optional Icon for Achievement"
					},
					"iconGreyURI": {
						"type": "string",
						"description": "Optional Icon for locked Achievement"
					},
					"startDate": {
						"type": "string",
						"description": "Optional Date ISO8601 YYYY-MM-DDTHH:mm:ss.sssZ"
					},
					"endDate": {
						"type": "string",
						"description": "Optional Date ISO8601 YYYY-MM-DDTHH:mm:ss.sssZ"
					}
				},
				"required": [
					"name",
					"isActive",
					"displayName",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AchievementPublicList": {
				"description": "Result of \"Get All Available Achievements\"",
				"properties": {
					"id": {
						"type": "string",
						"description": "Game ID"
					},
					"name": {
						"type": "string",
						"description": "Optional game name"
					},
					"version": {
						"type": "string",
						"description": "Optional game version"
					},
					"block": {
						"type": "number",
						"format": "double",
						"description": "Data block height (0 always valid)"
					},
					"caip2": {
						"type": "string",
						"description": "CAIP-2 blockchain identifier"
					},
					"time": {
						"type": "string",
						"description": "Optional date. ISO8601, like YYYY-MM-DDTHH:mm:ss.sssZ"
					},
					"achievements": {
						"items": {
							"$ref": "#/components/schemas/Achievement"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"block",
					"caip2",
					"achievements"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlayerAchievement": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Unique Achievement String"
					},
					"completed": {
						"type": "boolean",
						"description": "Is Achievement completed"
					},
					"completedDate": {
						"type": "string",
						"format": "date-time",
						"description": "Completed Date ISO8601 YYYY-MM-DDTHH:mm:ss.sssZ"
					},
					"completedRate": {
						"properties": {
							"total": {
								"type": "number",
								"format": "double",
								"description": "Total Progress"
							},
							"progress": {
								"type": "number",
								"format": "double",
								"description": "Current Progress"
							}
						},
						"required": [
							"total",
							"progress"
						],
						"type": "object",
						"description": "If achievement has incremental progress"
					}
				},
				"required": [
					"name",
					"completed"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PlayerAchievements": {
				"description": "Result of \"Get Completed Achievements\"",
				"properties": {
					"block": {
						"type": "number",
						"format": "double",
						"description": "Data block height (0 always valid)"
					},
					"caip2": {
						"type": "string",
						"description": "CAIP-2 blockchain identifier"
					},
					"time": {
						"type": "string",
						"description": "Optional date. ISO8601, like YYYY-MM-DDTHH:mm:ss.sssZ"
					},
					"wallet": {
						"type": "string",
						"description": "e.g. addr1234... or 0x1234..."
					},
					"walletType": {
						"type": "string",
						"description": "(Optional) Wallet-type"
					},
					"userId": {
						"type": "string",
						"description": "(Optional) User ID for a specific player account. This value should be\nimmutable and define a specific account, as the wallet might be migrated\nor updated."
					},
					"userName": {
						"type": "string",
						"description": "(Optional) Player display name"
					},
					"completed": {
						"type": "number",
						"format": "double",
						"description": "Total number of completed achievements for the game"
					},
					"achievements": {
						"items": {
							"$ref": "#/components/schemas/PlayerAchievement"
						},
						"type": "array"
					}
				},
				"required": [
					"block",
					"caip2",
					"wallet",
					"completed",
					"achievements"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@paima/rest",
		"version": "1.0.0",
		"description": "Paima Engine REST, defining the REST endpoints for the Paima node",
		"contact": {
			"name": "Paima Studios"
		}
	},
	"paths": {
		"/dry_run": {
			"get": {
				"operationId": "DryRunGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DryRunResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "gameInput",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/backend_version": {
			"get": {
				"operationId": "VersionGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VersionString"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/latest_processed_blockheight": {
			"get": {
				"operationId": "LatestProcessedBlockheightGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LatestProcessedBlockheightResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/emulated_blocks_active": {
			"get": {
				"operationId": "EmulatedBlockActiveGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EmulatedBlockActiveResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/deployment_blockheight_to_emulated": {
			"get": {
				"operationId": "DeploymentBlockheightToEmulatedGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeploymentBlockheightToEmulatedResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "deploymentBlockheight",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/confirm_input_acceptance": {
			"get": {
				"operationId": "ConfirmInputAcceptanceGet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConfirmInputAcceptanceResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "gameInput",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "blockHeight",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/achievements/public/list": {
			"get": {
				"operationId": "AchievementsPublic_list",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AchievementPublicList"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "header",
						"name": "Accept-Language",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/achievements/wallet/{wallet}": {
			"get": {
				"operationId": "AchievementsWallet",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlayerAchievements"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "wallet",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Comma-separated list.",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/achievements/erc/{erc}/{cde}/{token_id}": {
			"get": {
				"operationId": "AchievementsNft",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PlayerAchievements"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "erc",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "cde",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "token_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}